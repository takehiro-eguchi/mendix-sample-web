// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package myfirstmodule.proxies;

public class Root implements com.mendix.systemwideinterfaces.core.IEntityProxy
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject rootMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "MyFirstModule.Root";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Ip("Ip"),
		Continent("Continent"),
		Country("Country"),
		RegionName("RegionName"),
		City("City");

		private final java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Root(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, entityName));
	}

	protected Root(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject rootMendixObject)
	{
		if (rootMendixObject == null) {
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		}
		if (!com.mendix.core.Core.isSubClassOf(entityName, rootMendixObject.getType())) {
			throw new java.lang.IllegalArgumentException(String.format("The given object is not a %s", entityName));
		}	

		this.rootMendixObject = rootMendixObject;
		this.context = context;
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 * @param context The context to be used
	 * @param mendixObject The Mendix object for the new instance
	 * @return a new instance of this proxy class
	 */
	public static myfirstmodule.proxies.Root initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new myfirstmodule.proxies.Root(context, mendixObject);
	}

	public static myfirstmodule.proxies.Root load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return myfirstmodule.proxies.Root.initialize(context, mendixObject);
	}

	/**
	 * @return value of Ip
	 */
	public final java.lang.String getIp()
	{
		return getIp(getContext());
	}

	/**
	 * @param context
	 * @return value of Ip
	 */
	public final java.lang.String getIp(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Ip.toString());
	}

	/**
	 * Set value of Ip
	 * @param ip
	 */
	public final void setIp(java.lang.String ip)
	{
		setIp(getContext(), ip);
	}

	/**
	 * Set value of Ip
	 * @param context
	 * @param ip
	 */
	public final void setIp(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String ip)
	{
		getMendixObject().setValue(context, MemberNames.Ip.toString(), ip);
	}

	/**
	 * @return value of Continent
	 */
	public final java.lang.String getContinent()
	{
		return getContinent(getContext());
	}

	/**
	 * @param context
	 * @return value of Continent
	 */
	public final java.lang.String getContinent(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Continent.toString());
	}

	/**
	 * Set value of Continent
	 * @param continent
	 */
	public final void setContinent(java.lang.String continent)
	{
		setContinent(getContext(), continent);
	}

	/**
	 * Set value of Continent
	 * @param context
	 * @param continent
	 */
	public final void setContinent(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String continent)
	{
		getMendixObject().setValue(context, MemberNames.Continent.toString(), continent);
	}

	/**
	 * @return value of Country
	 */
	public final java.lang.String getCountry()
	{
		return getCountry(getContext());
	}

	/**
	 * @param context
	 * @return value of Country
	 */
	public final java.lang.String getCountry(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Country.toString());
	}

	/**
	 * Set value of Country
	 * @param country
	 */
	public final void setCountry(java.lang.String country)
	{
		setCountry(getContext(), country);
	}

	/**
	 * Set value of Country
	 * @param context
	 * @param country
	 */
	public final void setCountry(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String country)
	{
		getMendixObject().setValue(context, MemberNames.Country.toString(), country);
	}

	/**
	 * @return value of RegionName
	 */
	public final java.lang.String getRegionName()
	{
		return getRegionName(getContext());
	}

	/**
	 * @param context
	 * @return value of RegionName
	 */
	public final java.lang.String getRegionName(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.RegionName.toString());
	}

	/**
	 * Set value of RegionName
	 * @param regionname
	 */
	public final void setRegionName(java.lang.String regionname)
	{
		setRegionName(getContext(), regionname);
	}

	/**
	 * Set value of RegionName
	 * @param context
	 * @param regionname
	 */
	public final void setRegionName(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String regionname)
	{
		getMendixObject().setValue(context, MemberNames.RegionName.toString(), regionname);
	}

	/**
	 * @return value of City
	 */
	public final java.lang.String getCity()
	{
		return getCity(getContext());
	}

	/**
	 * @param context
	 * @return value of City
	 */
	public final java.lang.String getCity(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.City.toString());
	}

	/**
	 * Set value of City
	 * @param city
	 */
	public final void setCity(java.lang.String city)
	{
		setCity(getContext(), city);
	}

	/**
	 * Set value of City
	 * @param context
	 * @param city
	 */
	public final void setCity(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String city)
	{
		getMendixObject().setValue(context, MemberNames.City.toString(), city);
	}

	@java.lang.Override
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return rootMendixObject;
	}

	@java.lang.Override
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this) {
			return true;
		}
		if (obj != null && getClass().equals(obj.getClass()))
		{
			final myfirstmodule.proxies.Root that = (myfirstmodule.proxies.Root) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

  /**
   * Gives full name ("Module.Entity" name) of the type of the entity.
   *
   * @return the name
   */
	public static java.lang.String getType()
	{
		return entityName;
	}
}
